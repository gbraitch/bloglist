{"version":3,"sources":["components/Blog.js","components/Notification.js","components/Toggleable.js","components/BlogForm.js","utils/storage.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","num","blog","addLike","removeBlog","user","Accordion","className","Card","Header","Toggle","as","Button","variant","eventKey","title","author","username","onClick","data-toggle","data-placement","aria-disabled","disabled","Collapse","Body","url","likes","Notification","notification","Alert","type","message","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","in","children","displayName","BlogForm","handleNewBlog","notifyWith","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogURL","setBlogURL","createBlog","event","a","preventDefault","exception","console","log","onSubmit","value","name","onChange","target","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","baseUrl","getConfig","headers","Authorization","storage","token","getAll","axios","get","then","response","data","create","post","id","request","update","put","remove","delete","login","credentials","App","blogs","setBlogs","setUser","setUsername","password","setPassword","setNotification","dropDownValue","setdropDownValue","sort","setSort","blogFormRef","createRef","useEffect","blogService","toggleSwitch","document","querySelector","currentTheme","documentElement","setAttribute","checked","setTimeout","handleLogin","loginService","returnedBlog","current","concat","handleLike","likedBlog","map","b","handleRemove","window","confirm","filter","updateSort","e","darkMode","switchTheme","Toggleable","DropdownButton","Dropdown","Item","textContent","sortMethod","sortByLikes","localeCompare","sortByAuthor","index","key","sortByTitle","displayBlogs","maxWidth","margin","placeholder","required","autoFocus","ReactDOM","render","getElementById"],"mappings":"iSA+DeA,EA1DF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,IAAKC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KA2B9C,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,QACnB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,yBAAKF,UAAU,OACb,yBAAKA,UAAU,aACb,kBAACD,EAAA,EAAUI,OAAX,CAAkBC,GAAIC,IAAQC,QAAQ,OAAOC,SAAUb,GACpDC,EAAKa,MADR,OACmBb,EAAKc,SAG1B,yBAAKT,UAAU,wBAlCnBL,EAAKG,KAAKY,WAAaZ,EAAKY,SAE5B,6BACE,4BAAQV,UAAU,kCAAkCW,QAASd,GAA7D,WAMF,6BACE,4BACEG,UAAU,kCACVY,cAAY,UACZC,iBAAe,QACfL,MAAM,gCACNM,gBAAc,OACdC,UAAQ,GANV,cA6BF,kBAAChB,EAAA,EAAUiB,SAAX,CAAoBT,SAAUb,GAC5B,kBAACO,EAAA,EAAKgB,KAAN,KACE,6BAAK,2CAAL,IAA+BtB,EAAKa,OACpC,6BAAK,4CAAL,IAAgCb,EAAKc,QACrC,iCAAM,yCAAN,IAA8Bd,EAAKuB,KACnC,6BACE,2CAAyBvB,EAAKwB,MADhC,IACuC,6BACrC,4BAAQnB,UAAU,8BAA8BW,QAASf,GAAzD,e,QCvCCwB,EAZM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OAAKA,EAKH,kBAACC,EAAA,EAAD,CAAQhB,QAAO,UAA2B,YAAtBe,EAAaE,KAAqB,UAAY,SAAnD,gBACZF,EAAaG,SALT,M,QCALC,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAKF,6BACE,yBAAKE,MAAOL,GACV,4BAAQjC,UAAU,0BAA0BW,QAASyB,GAAmBR,EAAMW,cAEhF,yBAAKD,MAAOH,GACV,kBAACnB,EAAA,EAAD,CAAUwB,GAAIT,GACZ,6BACGH,EAAMa,SACP,kBAACpC,EAAA,EAAD,CAAQL,UAAU,sBAAsBW,QAASyB,GAAjD,iBAaZX,EAAUiB,YAAc,YAETjB,QC6BAkB,EAvEE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAAiB,EAChBf,mBAAS,IADO,mBAC3CgB,EAD2C,KAChCC,EADgC,OAEdjB,mBAAS,IAFK,mBAE3CkB,EAF2C,KAE/BC,EAF+B,OAGpBnB,mBAAS,IAHW,mBAG3CoB,EAH2C,KAGlCC,EAHkC,KAK5CC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACjBD,EAAME,iBACN,IAOEX,EANgB,CACdpC,MAAOsC,EACPrC,OAAQuC,EACR9B,IAAKgC,IAIPH,EAAa,IACbE,EAAc,IACdE,EAAW,IACX,MAAOK,GACPX,EAAW,yBAA0B,SACrCY,QAAQC,IAAI,yBAfG,2CAAH,sDAoBhB,OACE,yBAAK1D,UAAU,QACb,4CACA,0BAAM2D,SAAUP,GACd,sCAEE,2BACEpD,UAAU,eACVuB,KAAK,OACLqC,MAAOd,EACPe,KAAK,QACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBhB,EAAagB,EAAOH,WAGlD,uCAEE,2BACE5D,UAAU,eACVuB,KAAK,OACLqC,MAAOZ,EACPa,KAAK,SACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBd,EAAcc,EAAOH,WAGnD,oCAEE,2BACE5D,UAAU,eACVuB,KAAK,OACLqC,MAAOV,EACPW,KAAK,MACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAWY,EAAOH,WAGhD,4BAAQ5D,UAAU,kBAAkBuB,KAAK,UAAzC,U,iCCnDO,EATE,SAACzB,GAAD,OACfkE,aAAaC,QAHI,oBAGgBC,KAAKC,UAAUrE,KAQnC,EANE,kBACfoE,KAAKE,MAAMJ,aAAaK,QANP,uBAWJ,EAHI,kBACjBL,aAAaM,WATI,sBCGbC,EAAU,aAEVC,EAAY,WAChB,MAAO,CACLC,QAAS,CAAEC,cAAc,UAAD,OAAYC,IAAmBC,UA4B5C,GAAEC,OAxBF,WAEb,OADgBC,IAAMC,IAAIR,GACXS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAsBlBC,OAnBb,uCAAG,WAAMxF,GAAN,iBAAA2D,EAAA,sEACUwB,IAAMM,KAAKb,EAAS5E,EAAM6E,KADpC,cACPS,EADO,gBAISH,IAAMC,IAAN,UAAaR,EAAb,YAAwBU,EAASC,KAAKG,KAJ/C,cAIPC,EAJO,yBAKNA,EAAQJ,MALF,2CAAH,sDAmBqBK,OAXlB,SAAC5F,GAEd,OADgBmF,IAAMU,IAAN,UAAajB,EAAb,YAAwB5E,EAAK0F,IAAM1F,EAAM6E,KAC1CQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASFO,OAN7B,uCAAG,WAAMJ,GAAN,eAAA/B,EAAA,sEACUwB,IAAMY,OAAN,UAAgBnB,EAAhB,YAA2Bc,GAAMb,KAD3C,cACPS,EADO,yBAENA,EAASC,MAFH,2CAAH,uDCrBG,GAAES,MALN,uCAAG,WAAMC,GAAN,eAAAtC,EAAA,sEACWwB,IAAMM,KAHf,aAG6BQ,GAD/B,cACNX,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCoPIW,EA3OH,WAAO,IAAD,EACU/D,mBAAS,IADnB,mBACTgE,EADS,KACFC,EADE,OAEQjE,mBAAS,MAFjB,mBAEThC,EAFS,KAEHkG,EAFG,OAGgBlE,mBAAS,IAHzB,mBAGTpB,EAHS,KAGCuF,EAHD,OAIgBnE,mBAAS,IAJzB,mBAIToE,EAJS,KAICC,EAJD,OAKwBrE,mBAAS,MALjC,mBAKTT,EALS,KAKK+E,EALL,OAM0BtE,mBAAS,WANnC,mBAMTuE,EANS,KAMMC,EANN,OAOQxE,mBAAS,MAPjB,mBAOTyE,EAPS,KAOHC,EAPG,KASVC,EAAc/E,IAAMgF,YAE1BC,qBAAU,WACRC,EAAY/B,SAASG,MAAK,SAAAc,GAAK,OAC7BC,EAAUD,QAEX,IAEHa,qBAAU,WACR,IAAM7G,EAAO6E,IACbqB,EAAQlG,GAER,IAAM+G,EAAeC,SAASC,cAAc,wCACtCC,EAAehD,aAAaK,QAAQ,SAEtC2C,IACFF,SAASG,gBAAgBC,aAAa,aAAcF,GAC/B,SAAjBA,IACFH,EAAaM,SAAU,MAG1B,IAGH,IAAMtE,EAAa,SAACrB,GAA6B,IAApBD,EAAmB,uDAAd,UAChC6E,EAAgB,CACd5E,UAASD,SAEX6F,YAAW,WACThB,EAAgB,QACf,MAGCiB,EAAW,uCAAG,WAAOhE,GAAP,eAAAC,EAAA,6DAClBD,EAAME,iBADY,kBAGG+D,EAAa3B,MAAM,CACpCjF,WAAUwF,aAJI,OAGVpG,EAHU,OAOhBmG,EAAY,IACZE,EAAY,IACZH,EAAQlG,GACR+C,EAAW,gBAAD,OAAiB/C,EAAK+D,KAAtB,MACVc,EAAiB7E,GAXD,kDAahB+C,EAAW,iCAAkC,SAC7CY,QAAQC,IAAI,qBAdI,0DAAH,sDAuBXd,EAAa,uCAAG,WAAOjD,GAAP,eAAA2D,EAAA,+EAESsD,EAAYzB,OAAOxF,GAF5B,OAEZ4H,EAFY,OAGlBd,EAAYe,QAAQpF,mBACpB2D,EAASD,EAAM2B,OAAOF,IACtB1E,EAAW,eAAD,OAAgB0E,EAAa/G,MAA7B,oBALQ,gDAOlBiD,QAAQC,IAAR,MAPkB,yDAAH,sDAWbgE,EAAU,uCAAG,WAAO/H,GAAP,eAAA2D,EAAA,6DACXqE,EADW,eACMhI,EADN,CACYwB,MAAOxB,EAAKwB,MAAM,EAAGrB,KAAMH,EAAKG,KAAKuF,KADjD,SAEXuB,EAAYrB,OAAOoC,GAFR,OAGjB5B,EAASD,EAAM8B,KAAI,SAAAC,GAAC,OAAIA,EAAExC,KAAO1F,EAAK0F,GAAd,eAAwB1F,EAAxB,CAA8BwB,MAAOxB,EAAKwB,MAAQ,IAAM0G,MAH/D,2CAAH,sDAMVC,EAAY,uCAAG,WAAOnI,GAAP,SAAA2D,EAAA,0DACRyE,OAAOC,QAAP,sBAA8BrI,EAAKa,MAAnC,eAA+Cb,EAAKc,SAD5C,gCAGXmG,EAAYnB,OAAO9F,EAAK0F,IAHb,OAIjBU,EAASD,EAAMmC,QAAO,SAAAJ,GAAC,OAAIA,EAAExC,KAAO1F,EAAK0F,OAJxB,2CAAH,sDAQZ6C,EAAa,SAACC,GAClB7B,EAAiB6B,GACjB3B,EAAQ2B,IAoDJC,EAAW,kBACf,yBAAKpI,UAAU,oCACb,2BAAOA,UAAU,gBACf,2BAAOuB,KAAK,WAAW8D,GAAG,WAAW1E,QAAS,SAACwH,GAAD,OAAOE,EAAYF,MACjE,yBAAKnI,UAAU,kBAEjB,+BAIEqI,EAAc,SAACF,GACfA,EAAEpE,OAAOoD,SACXL,SAASG,gBAAgBC,aAAa,aAAc,QACpDlD,aAAaC,QAAQ,QAAS,UAG9B6C,SAASG,gBAAgBC,aAAa,aAAc,SACpDlD,aAAaC,QAAQ,QAAS,WAIlC,OAAMnE,EAoCJ,yBAAKE,UAAU,aACb,kBAAC,EAAD,CAAcqB,aAAcA,IAC3B+G,IACD,6BACE,yBAAKpI,UAAU,QACb,wBAAIA,UAAU,eAAd,SACA,4BAAQA,UAAU,qCAAqCW,QAAS,kBAlJtEqF,EAAQ,WACRrB,MAiJM,WAEF,wCAAc7E,EAAK+D,KAAnB,KACA,yBAAK7D,UAAU,QACb,kBAACsI,EAAD,CAAY/F,YAAY,eAAeV,IAAK4E,GAC1C,kBAAC,EAAD,CAAU7D,cAAeA,EAAeC,WAAYA,MAGxD,yBAAK7C,UAAU,QACb,6BACE,uCAEE,kBAACuI,EAAA,EAAD,CAAgB/H,MAAO6F,EAAerG,UAAU,sBAC9C,kBAACwI,EAAA,EAASC,KAAV,CAAerI,GAAG,UAAS,yBAAKO,QAAS,SAACwH,GAAD,OAAOD,EAAWC,EAAEpE,OAAO2E,eAAzC,UAC3B,kBAACF,EAAA,EAASC,KAAV,CAAerI,GAAG,UAAS,yBAAKO,QAAS,SAACwH,GAAD,OAAOD,EAAWC,EAAEpE,OAAO2E,eAAzC,UAC3B,kBAACF,EAAA,EAASC,KAAV,CAAerI,GAAG,UAAS,yBAAKO,QAAS,SAACwH,GAAD,OAAOD,EAAWC,EAAEpE,OAAO2E,eAAzC,cAIjC,yBAAK1I,UAAU,QA7HF,WACnB,IAAI2I,EAEJ,GAAa,UAATpC,EACFoC,EAAa,SAACrF,EAAEuE,GAAH,OAVI,SAACvE,EAAGuE,GAAJ,OAAUA,EAAE1G,MAAQmC,EAAEnC,MAUjByH,CAAYtF,EAAEuE,SAEjC,GAAa,UAATtB,EACPoC,EAAa,SAACrF,EAAEuE,GAAH,OATI,SAACvE,EAAGuE,GAAJ,OAAUvE,EAAE7C,OAAOoI,cAAchB,EAAEpH,QAS9BqI,CAAaxF,EAAEuE,QAElC,IAAa,WAATtB,EAIP,OACET,EAAM8B,KAAI,SAACjI,EAAMoJ,GAAP,OACR,kBAAC,EAAD,CACErJ,IAAKqJ,EAAM,EACXC,IAAKrJ,EAAK0F,GACV1F,KAAMA,EACNC,QAAS,kBAAM8H,EAAW/H,IAC1BE,WAAY,kBAAMiI,EAAanI,IAC/BG,KAAMA,OAXZ6I,EAAa,SAACrF,EAAEuE,GAAH,OAdI,SAACvE,EAAGuE,GAAJ,OAAWvE,EAAE9C,MAAMqI,cAAchB,EAAErH,OAc9ByI,CAAY3F,EAAEuE,IAiBtC,OACE/B,EACGS,KAAKoC,GACLf,KAAI,SAACjI,EAAMoJ,GAAP,OACH,kBAAC,EAAD,CACErJ,IAAKqJ,EAAM,EACXC,IAAKrJ,EAAK0F,GACV1F,KAAMA,EACNC,QAAS,kBAAM8H,EAAW/H,IAC1BE,WAAY,kBAAMiI,EAAanI,IAC/BG,KAAMA,OAyFLoJ,OA5DP,yBAAKlJ,UAAU,aACb,kBAAC,EAAD,CAAcqB,aAAcA,IAC3B+G,IACD,yBAAKpI,UAAU,eACb,wBAAIA,UAAU,aAAd,kBACA,0BAAMsC,MAAO,CAAE6G,SAAW,QAASC,OAAS,QAAUzF,SAAU0D,GAC9D,2BACE9F,KAAK,OACLvB,UAAU,oBACVqJ,YAAY,WACZzF,MAAOlD,EACPmD,KAAK,WACLyF,UAAQ,EAACC,WAAS,EAClBzF,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkC,EAAYlC,EAAOH,UAE/C,2BACErC,KAAK,WACLvB,UAAU,eACVqJ,YAAY,WACZzF,MAAOsC,EACPrC,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoC,EAAYpC,EAAOH,UAE/C,yBAAK5D,UAAU,QACb,4BAAQA,UAAU,mCAAmCuB,KAAK,UAA1D,gB,YCrMdiI,IAASC,OAAO,kBAAC,EAAD,MAAS3C,SAAS4C,eAAe,W","file":"static/js/main.fa6dc453.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Blog = ({ num, blog, addLike, removeBlog, user }) => {\r\n\r\n  const removeButton = () => {\r\n    if (blog.user.username === user.username) {\r\n      return (\r\n        <div>\r\n          <button className='btn btn-danger btn-sm py-0 mt-3' onClick={removeBlog}>remove</button>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className='btn btn-danger btn-sm py-0 mt-3'\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"right\"\r\n            title=\"User did not create this note\"\r\n            aria-disabled='true'\r\n            disabled>\r\n            remove\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Accordion className='mb-1'>\r\n      <Card>\r\n        <Card.Header>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-11\">\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey={num}>\r\n                {blog.title} by {blog.author}\r\n              </Accordion.Toggle>\r\n            </div>\r\n            <div className=\"col-md-1 float-right\">\r\n              {removeButton()}\r\n            </div>\r\n          </div>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey={num}>\r\n          <Card.Body>\r\n            <div><strong>Title: </strong> {blog.title}</div>\r\n            <div><strong>Author: </strong> {blog.author}</div>\r\n            <div> <strong>URL: </strong> {blog.url}</div>\r\n            <div>\r\n              <strong>Likes: </strong>{blog.likes} <br/>\r\n              <button className='btn btn-sm py-0 btn-primary' onClick={addLike}>Like!</button>\r\n            </div>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nconst Notification = ({ notification }) => {\n  if (!notification) {\n    return null\n  }\n\n  return (\n    <Alert  variant={`${notification.type === 'success' ? 'success' : 'danger'} alert ml-3`}>\n      {notification.message}\n    </Alert>\n  )\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Button from 'react-bootstrap/Button'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button className='btn btn-outline-primary' onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        <Collapse in={visible}>\n          <div>\n            {props.children}\n            <Button className='btn btn-danger ml-3' onClick={toggleVisibility}>cancel</Button>\n          </div>\n        </Collapse>\n\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ handleNewBlog, notifyWith }) => {\n  const [blogTitle, setBlogTitle] = useState('')\n  const [blogAuthor, setBlogAuthor] = useState('')\n  const [blogURL, setBlogURL] = useState('')\n\n  const createBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const newBlog = {\n        title: blogTitle,\n        author: blogAuthor,\n        url: blogURL\n      }\n\n      handleNewBlog(newBlog)\n      setBlogTitle('')\n      setBlogAuthor('')\n      setBlogURL('')\n    } catch (exception) {\n      notifyWith('Failed to add new blog', 'error')\n      console.log('Failed to create blog')\n    }\n  }\n\n\n  return (\n    <div className='mx-3'>\n      <h3>Add New Blog</h3>\n      <form onSubmit={createBlog}>\n        <div>\n          Title:\n          <input\n            className='form-control'\n            type=\"text\"\n            value={blogTitle}\n            name=\"Title\"\n            onChange={({ target }) => setBlogTitle(target.value)}\n          />\n        </div>\n        <div>\n          Author:\n          <input\n            className='form-control'\n            type=\"text\"\n            value={blogAuthor}\n            name=\"Author\"\n            onChange={({ target }) => setBlogAuthor(target.value)}\n          />\n        </div>\n        <div>\n          URL:\n          <input\n            className='form-control'\n            type=\"text\"\n            value={blogURL}\n            name=\"URL\"\n            onChange={({ target }) => setBlogURL(target.value)}\n          />\n        </div>\n        <button className='btn btn-primary' type=\"submit\">add</button>\n      </form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  handleNewBlog: PropTypes.func.isRequired,\n  notifyWith: PropTypes.func.isRequired,\n}\n\n\nexport default BlogForm","const storageKey = 'loggedBlogAppUser'\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n  JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n  localStorage.removeItem(storageKey)\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser\n}","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/blogs'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async blog => {\n  const response = await axios.post(baseUrl, blog, getConfig())\n  // Need to do another get request, as response from post does not contain user object,\n  // only its id. Thus, remove button will be disabled until refresh unless we get obj from db\n  const request = await axios.get(`${baseUrl}/${response.data.id}`)\n  return request.data\n}\n\nconst update = (blog) => {\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`, getConfig())\n  return response.data\n}\n\n\nexport default { getAll, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Toggleable from './components/Toggleable'\nimport BlogForm from './components/BlogForm'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport storage from './utils/storage'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [dropDownValue, setdropDownValue] = useState('Sort By')\n  const [sort, setSort] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const user = storage.loadUser()\n    setUser(user)\n\n    const toggleSwitch = document.querySelector('.theme-switch input[type=\"checkbox\"]')\n    const currentTheme = localStorage.getItem('theme')\n\n    if (currentTheme) {\n      document.documentElement.setAttribute('data-theme', currentTheme)\n      if (currentTheme === 'dark') {\n        toggleSwitch.checked = true\n      }\n    }\n  }, [])\n\n\n  const notifyWith = (message, type='success') => {\n    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      notifyWith(`Welcome Back ${user.name}!`)\n      storage.saveUser(user)\n    } catch (exception) {\n      notifyWith('Incorrect username or password', 'error')\n      console.log('Wrong credentials')\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    storage.logoutUser()\n  }\n\n  const handleNewBlog = async (blog) => {\n    try {\n      const returnedBlog = await blogService.create(blog)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(returnedBlog))\n      notifyWith(`A new blog: ${returnedBlog.title} has been added`)\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n  const handleLike = async (blog) => {\n    const likedBlog = { ...blog, likes: blog.likes+1, user: blog.user.id  }\n    await blogService.update(likedBlog)\n    setBlogs(blogs.map(b => b.id === blog.id ? { ...blog, likes: blog.likes + 1 } : b))\n  }\n\n  const handleRemove = async (blog) => {\n    const ok = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n    if (ok) {\n      await blogService.remove(blog.id)\n      setBlogs(blogs.filter(b => b.id !== blog.id))\n    }\n  }\n\n  const updateSort = (e) => {\n    setdropDownValue(e)\n    setSort(e)\n  }\n\n  const sortByLikes = ((a, b) => b.likes - a.likes)\n\n  const sortByTitle = ((a, b) =>  a.title.localeCompare(b.title))\n\n  const sortByAuthor= ((a, b) => a.author.localeCompare(b.author))\n\n  const displayBlogs = () => {\n    let sortMethod\n\n    if (sort === 'Likes') {\n      sortMethod = (a,b) => sortByLikes(a,b)\n    }\n    else if (sort === 'Title') {\n      sortMethod = (a,b) => sortByAuthor(a,b)\n    }\n    else if (sort === 'Author') {\n      sortMethod = (a,b) => sortByTitle(a,b)\n    }\n    else {\n      return (\n        blogs.map((blog, index) =>\n          <Blog\n            num={index+1}\n            key={blog.id}\n            blog={blog}\n            addLike={() => handleLike(blog)}\n            removeBlog={() => handleRemove(blog)}\n            user={user}\n          />\n        )\n      )\n    }\n\n    return (\n      blogs\n        .sort(sortMethod)\n        .map((blog, index) =>\n          <Blog\n            num={index+1}\n            key={blog.id}\n            blog={blog}\n            addLike={() => handleLike(blog)}\n            removeBlog={() => handleRemove(blog)}\n            user={user}\n          />\n        )\n    )\n  }\n\n  const darkMode = () => (\n    <div className=\"theme-switch-wrapper float-right\">\n      <label className=\"theme-switch\">\n        <input type=\"checkbox\" id=\"checkbox\" onClick={(e) => switchTheme(e)} />\n        <div className=\"slider round\"></div>\n      </label>\n      <em></em>\n    </div>\n  )\n\n  const switchTheme = (e) => {\n    if (e.target.checked) {\n      document.documentElement.setAttribute('data-theme', 'dark')\n      localStorage.setItem('theme', 'dark')\n    }\n    else {\n      document.documentElement.setAttribute('data-theme', 'light')\n      localStorage.setItem('theme', 'light')\n    }\n  }\n\n  if ( !user ) {\n    return (\n      <div className='container'>\n        <Notification notification={notification}/>\n        {darkMode()}\n        <div className='text-center'>\n          <h1 className='mt-5 mb-3'>Please sign in</h1>\n          <form style={{ maxWidth : '480px', margin : 'auto' }} onSubmit={handleLogin}>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder='Username'\n              value={username}\n              name=\"Username\"\n              required autoFocus\n              onChange={({ target }) => setUsername(target.value)}\n            />\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder='Password'\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n            <div className='mt-3'>\n              <button className='btn btn-lg btn-block btn-primary' type=\"submit\">Sign In</button>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Notification notification={notification}/>\n      {darkMode()}\n      <div>\n        <div className='mt-5'>\n          <h1 className='text-center'>blogs</h1>\n          <button className='btn btn-outline-danger float-right' onClick={() => handleLogout()}>logout</button>\n        </div>\n        <h2> Welcome {user.name} </h2>\n        <div className='mt-5'>\n          <Toggleable buttonLabel='Add New Blog' ref={blogFormRef}>\n            <BlogForm handleNewBlog={handleNewBlog} notifyWith={notifyWith}/>\n          </Toggleable>\n        </div>\n        <div className='mt-5'>\n          <div>\n            <h2>\n              bloglist\n              <DropdownButton title={dropDownValue} className=\"format float-right\">\n                <Dropdown.Item as=\"button\"><div onClick={(e) => updateSort(e.target.textContent)}>Likes</div></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><div onClick={(e) => updateSort(e.target.textContent)}>Title</div></Dropdown.Item>\n                <Dropdown.Item as=\"button\"><div onClick={(e) => updateSort(e.target.textContent)}>Author</div></Dropdown.Item>\n              </DropdownButton>\n            </h2>\n          </div>\n          <div className='mt-4'>\n            {displayBlogs()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}